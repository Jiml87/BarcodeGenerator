@inject IJSRuntime JSRuntime
@using System;

@using BarcodeGenerator.Utils


@page "/"

<div class="container barcode-container">
    <h3>Barcode Generator</h3>

    <div class="d-flex ">
        <input @bind="InputValue" placeholder="Enter text for barcode" class="form-control"/>
        <button @onclick="(e => HandleGenerateBarcode())" type="button" class="btn btn-primary mx-2">Generate</button>
    </div>

    <div class="py-4">
        <InputRadioGroup Name="barcodeFormat" @bind-Value="SelectedFormat" class="form-check">
            <label class="mx-2 form-check-label pointer">
                <InputRadio Value='"QR_CODE"' class="form-check-input" />
                QR Code
            </label>
            <label class="mx-2 form-check-label pointer">
                <InputRadio Value='"CODE_128"' class="form-check-input" />
                Code 128
            </label>
            <label class="mx-2 form-check-label pointer">
                <InputRadio Value='"AZTEC"' />
                AZTEC
            </label>
        </InputRadioGroup>
    </div>

    @if (!string.IsNullOrEmpty(BarcodeImage))
    {
        <div>
        <img src="@BarcodeImage" alt="Generated Barcode" width="300px" />
    </div>
    }
</div>


@code {
    private string InputValue = "";
    private string BarcodeImage = "";
    private string SelectedFormat = "QR_CODE";

    private async Task HandleGenerateBarcode()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(InputValue))
            {
                await JSRuntime.InvokeVoidAsync("alert", "Input value cannot be empty!");
                return;
            }

            BarcodeImage = BarcodeUtils.GenerateBarcode(InputValue, SelectedFormat);
        }
        catch(Exception ex)
        {
            await JSRuntime.InvokeVoidAsync(ex.Message);
        }

    }
}