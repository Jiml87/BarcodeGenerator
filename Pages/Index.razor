@inject IJSRuntime JSRuntime

@page "/"

<h3>Barcode Generator</h3>

<div>
    <input @bind="InputValue" placeholder="Enter text for barcode" />
    <button @onclick="(e => HandleGenerateBarcode())">Generate</button>
</div>

<div class="py-4">
    <InputRadioGroup Name="barcodeFormat" @bind-Value="SelectedFormat">
        <label>
            <InputRadio Value="ZXing.BarcodeFormat.QR_CODE" />
            QR Code
        </label>
        <label>
            <InputRadio Value="ZXing.BarcodeFormat.CODE_128" />
            Code 128
        </label>
        <label>
            <InputRadio Value="ZXing.BarcodeFormat.AZTEC" />
            AZTEC
        </label>
    </InputRadioGroup>
</div>

@if (!string.IsNullOrEmpty(BarcodeImage))
{
    <div>
    <img src="@BarcodeImage" alt="Generated Barcode" width="300px" />
</div>
}


@code {
    private string InputValue = "";
    private string BarcodeImage = "";
    private ZXing.BarcodeFormat SelectedFormat = ZXing.BarcodeFormat.QR_CODE;



    private string GenerateBarcode(string value, ZXing.BarcodeFormat format)
    {
        if (string.IsNullOrWhiteSpace(value))
        {
            return string.Empty;
        }

        var writer = new ZXing.BarcodeWriterSvg
            {
                Format = format
            };

        var svg = writer.Write(value);
        return $"data:image/svg+xml;base64,{Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(svg.Content))}";
    }

    private async Task HandleGenerateBarcode()
    {
        if (string.IsNullOrWhiteSpace(InputValue))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Input value cannot be empty!");
            return;
        }

        BarcodeImage = GenerateBarcode(InputValue, SelectedFormat);

    }
}